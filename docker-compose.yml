services:
  postgres_db:
    image: postgres:13.5
    environment:
      - POSTGRES_USER=heartistry
      - POSTGRES_PASSWORD=heartistry
      - POSTGRES_DB=heartistry
    container_name: postgres_db
    networks:
      - overlay_network
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data
    restart: always

  user-service:
    image: minhphuc2544/user-service:latest
    depends_on:
      - postgres_db
    container_name: user-service
    ports: 
      - "3030:3030"
    environment:
      - DB_TYPE=postgres
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_USERNAME=heartistry
      - DB_PASSWORD=heartistry
      - DB_NAME=heartistry
      - DATABASE_URL=postgres://heartistry:heartistry@postgres_db:5432/heartistry
      - JWT_SECRET=c66077ac1510b83fbda3822b8007fafb9fdf6e550d13574bfd98164d0328261e
      - TOKEN_EXPIRE_TIME=24h
      - MAIL_HOST=smtp.gmail.com
      - MAIL_USER=heartistry.service@gmail.com
      - MAIL_PASSWORD=buevjbrngdzaobip
      - MAIL_FROM=noreply@heartistry.com
    networks:
      - overlay_network

  mysql_db:
    image: mysql:latest
    environment:
      - MYSQL_DATABASE=heartistry
      - MYSQL_PASSWORD=heartistry
      - MYSQL_ROOT_PASSWORD=verysecret
      - MYSQL_USER=heartistry
    container_name: mysql_db
    networks:
      - overlay_network
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    restart: always

  task-service:
    image: minhphuc2544/task-service:latest
    depends_on:
      - mysql_db
    container_name: task-service
    ports:
      - "8000:8000"
    environment:
      - SPRING_APPLICATION_NAME=heartistry-task-api
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql_db:3306/heartistry
      - SPRING_DATASOURCE_USERNAME=heartistry
      - SPRING_DATASOURCE_PASSWORD=heartistry
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRINGDOC_SWAGGER_UI_PATH=/swagger-ui.html
      - JWT_SECRET=c66077ac1510b83fbda3822b8007fafb9fdf6e550d13574bfd98164d0328261e
      - SERVER_PORT=8000
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=*
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=true
      - MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS=always
      - MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENDPOINT=/actuator/prometheus
      - MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED=true
      - MANAGEMENT_METRICS_TAGS_APPLICATION=heartistry-task-api
    networks:
      - overlay_network
    
  redis:
    image: redis:4.0-alpine
    container_name: tyk-redis
    ports:
      - "6379:6379"  # Map the port to the host machine
    networks:
      - overlay_network
    restart: always

  tyk-api-gateway:
    image: docker.tyk.io/tyk-gateway/tyk-gateway:latest
    container_name: tyk-gateway
    ports:
      - "8080:8080"  # Map port 8080 on the host to 8080 on the container
    networks:
      - overlay_network
    depends_on:
      - redis
      - user-service
      - task-service
    volumes:
      - ./tyk-api-gateway/apps:/opt/tyk-gateway/apps
      - ./tyk-api-gateway/tyk.standalone.conf:/opt/tyk-gateway/tyk.conf
    working_dir: /opt/tyk-gateway
    environment:
      - TYK_LOGLEVEL=info
      - TYK_INSTRUMENTATION=0
      - TYK_GW_TRACER_ENABLED=false
      - TYK_GW_HTTPSERVEROPTIONS_ENABLEHTTP2=true
      - TYK_GW_PROXYENABLEHTTP2=true
      - TYK_GW_HTTPSERVEROPTIONS_FLUSHINTERVAL=1
      - TYK_GW_ANALYTICSCONFIG_ENABLEGEOIP=true

  tyk-pump:
    image: tykio/tyk-pump-docker-pub:v1.7.0-rc1
    container_name: tyk-pump
    ports:
      - 8083:8083
      - 8084:8084
    volumes:
      - ./tyk-pump/pump.conf:/opt/tyk-pump/pump.conf
    environment:
      - TYK_INSTRUMENTATION=0
      - TYK_LOGLEVEL=info
    depends_on:
      - redis
    networks:
      - overlay_network
  
  k6:
    image: grafana/k6:latest
    container_name: k6
    networks:
      - overlay_network
    ports:
      - "6565:6565"
    volumes:
      - ./k6/:/scripts
    extra_hosts:
      - "host.docker.internal:host-gateway"

  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/:/prometheus
      - ./data/prometheus:/data
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/data'
    networks:
      - overlay_network
    depends_on:
      - postgres_exporter
      - mysql_exporter
      - task-service
      - tyk-api-gateway
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana-oss
    user: root
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources/
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards/
      - ./data/grafana/:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin  # Default Grafana username
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Default Grafana password
    networks:
      - overlay_network
    depends_on:
      - prometheus

  postgres_exporter:
    image: bitnami/postgres-exporter
    container_name: postgres_exporter
    environment:
      DATA_SOURCE_NAME: postgres://heartistry:heartistry@postgres_db:5432/heartistry?sslmode=disable
    networks:
      - overlay_network
    ports:
      - "9187:9187"
    depends_on:
      - postgres_db

  mysql_exporter:
    image: prom/mysqld-exporter
    container_name: mysql_exporter
    command: 
     - --config.my-cnf=/cfg/.my.cnf
     - --mysqld.address=mysql_db:3306
    volumes:
      - "./db_exporter/mysql_exporter/.mysql.cnf:/cfg/.my.cnf"
    ports:
      - 9104:9104
    networks:
      - overlay_network
    depends_on:
      - mysql_db



volumes:
  pg-data:
  mysql-data:



networks:
  overlay_network:
    driver: overlay
